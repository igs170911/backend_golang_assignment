// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/repository/eth_client.go
//
// Generated by this command:
//
//	mockgen -source=./internal/domain/repository/eth_client.go -destination=./internal/mock/repository/eth_client.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockETHClient is a mock of ETHClient interface.
type MockETHClient struct {
	ctrl     *gomock.Controller
	recorder *MockETHClientMockRecorder
}

// MockETHClientMockRecorder is the mock recorder for MockETHClient.
type MockETHClientMockRecorder struct {
	mock *MockETHClient
}

// NewMockETHClient creates a new mock instance.
func NewMockETHClient(ctrl *gomock.Controller) *MockETHClient {
	mock := &MockETHClient{ctrl: ctrl}
	mock.recorder = &MockETHClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockETHClient) EXPECT() *MockETHClientMockRecorder {
	return m.recorder
}

// CallEthereum mocks base method.
func (m *MockETHClient) CallEthereum(method string, params []any) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CallEthereum", method, params)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CallEthereum indicates an expected call of CallEthereum.
func (mr *MockETHClientMockRecorder) CallEthereum(method, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CallEthereum", reflect.TypeOf((*MockETHClient)(nil).CallEthereum), method, params)
}
